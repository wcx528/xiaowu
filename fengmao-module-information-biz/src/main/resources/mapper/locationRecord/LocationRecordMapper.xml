<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fmyd888.fengmao.module.information.dal.mysql.locationRecord.LocationRecordMapper">

    <!--
        一般情况下，尽可能使用 Mapper 进行 CRUD 增删改查即可。
        无法满足的场景，例如说多表关联查询，才使用 XML 编写 SQL。
        代码生成器暂时只生成 Mapper XML 文件本身，更多推荐 MybatisX 快速开发插件来生成查询。
     -->

    <select id="selectLatestAddresses"
            parameterType="list"
            resultType="com.fmyd888.fengmao.module.information.controller.admin.locationRecord.dto.LocationCarInfoDTO">
        SELECT car_id,longitude,latitude
        FROM (
        SELECT ROW_NUMBER() OVER (PARTITION BY car_id ORDER BY id DESC) AS no, car_id,longitude,latitude
        FROM fm_location_record WITH(NOLOCK)
        WHERE car_id IN
        <foreach item="item" index="index" collection="carIds" open="(" separator="," close=")">
            #{item}
        </foreach>
        ) MergeTable
        WHERE no = 1
    </select>

    <insert id="batchInsertLocation" parameterType="java.util.List">
        INSERT INTO fm_location_record (car_id, longitude, latitude, creator, create_time,  updater, update_time, address, total_mileage, speed, drct)
        VALUES
        <foreach collection="list" item="item" separator=",">
            (#{item.carId}, #{item.longitude}, #{item.latitude},  #{item.creator}, #{item.createTime},  #{item.updater},GETDATE(), #{item.address}, #{item.totalMileage}, #{item.speed}, #{item.drct})
        </foreach>
    </insert>
    <insert id="batchInsertX" parameterType="list">
        INSERT INTO fm_location_record
        ( car_id,  longitude,  latitude,  address,  total_mileage,  speed,  creator,  create_time,  updater,  update_time,  tenant_id,  deleted,  dept_id,  drct  )
        VALUES
        <foreach collection="list" item="item" separator=",">
            ( #{item.carId} ,  #{item.longitude} ,  #{item.latitude} ,  #{item.address} ,  #{item.totalMileage} ,  #{item.speed} ,  #{item.creator} ,  GETDATE() ,  #{item.updater} ,  GETDATE() ,  #{item.tenantId} ,   0  ,  #{item.deptId} ,  #{item.drct}   )
        </foreach>
    </insert>
    <delete id="deletePhysicallyByIds">
        DELETE FROM fm_location_record WHERE id IN
        <foreach collection="idList" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>